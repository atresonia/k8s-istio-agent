apiVersion: v1
kind: Namespace
metadata:
  name: troubleshooting
  labels:
    istio-injection: enabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-istio-agent
  namespace: troubleshooting
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-istio-agent
rules:
# Core Kubernetes resources for troubleshooting
- apiGroups: [""]
  resources: 
    - pods
    - services
    - endpoints
    - nodes
    - namespaces
    - events
    - configmaps
    - secrets
  verbs: ["get", "list", "watch"]

- apiGroups: [""]
  resources:
    - pods/log
    - pods/status
  verbs: ["get", "list"]

# Apps resources
- apiGroups: ["apps"]
  resources:
    - deployments
    - replicasets
    - daemonsets
    - statefulsets
  verbs: ["get", "list", "watch"]

# Networking resources
- apiGroups: ["networking.k8s.io"]
  resources:
    - networkpolicies
    - ingresses
  verbs: ["get", "list", "watch"]

# Istio resources
- apiGroups: ["networking.istio.io"]
  resources:
    - virtualservices
    - destinationrules
    - gateways
    - serviceentries
    - sidecars
    - workloadentries
  verbs: ["get", "list", "watch"]

- apiGroups: ["security.istio.io"]
  resources:
    - authorizationpolicies
    - peerauthentications
    - requestauthentications
  verbs: ["get", "list", "watch"]

- apiGroups: ["config.istio.io"]
  resources:
    - "*"
  verbs: ["get", "list", "watch"]

# Metrics and monitoring
- apiGroups: ["metrics.k8s.io"]
  resources:
    - pods
    - nodes
  verbs: ["get", "list"]

# Custom resources that might be relevant
- apiGroups: ["apiextensions.k8s.io"]
  resources:
    - customresourcedefinitions
  verbs: ["get", "list"]

# For getting cluster info
- apiGroups: [""]
  resources:
    - componentstatuses
  verbs: ["get", "list"]

# For accessing service mesh telemetry
- apiGroups: ["telemetry.istio.io"]
  resources:
    - "*"
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-istio-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-istio-agent
subjects:
- kind: ServiceAccount
  name: k8s-istio-agent
  namespace: troubleshooting
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-config
  namespace: troubleshooting
data:
  config.yaml: |
    llm:
      provider: "internal"  # Change based on your setup
      config:
        endpoint: "${LLM_ENDPOINT:-https://internal-llm.company.com}"
        api_key: "${LLM_API_KEY}"
        model: "gpt-4"
    
    kubernetes:
      namespace: "default"
    
    istio:
      namespace: "istio-system"
    
    tools:
      enabled:
        - kubectl
        - istio_proxy
        - istio_config
        - logs
        - prometheus
    
    prometheus:
      endpoint: "${PROMETHEUS_URL:-http://prometheus.istio-system:9090}"
    
    logging:
      level: "${LOG_LEVEL:-INFO}"
      format: "json"
    
    web:
      host: "0.0.0.0"
      port: 8080
    
    agent:
      max_iterations: 5
      conversation_memory: 10
---
apiVersion: v1
kind: Secret
metadata:
  name: llm-credentials
  namespace: troubleshooting
type: Opaque
stringData:
  api-key: "your-llm-api-key-here"  # Replace with actual API key